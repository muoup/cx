public:

u64 strlen(const char* str) {
    u64 length = 0;

    while (*str) {
        length++;
        str++;
    }

    return length;
}

struct string {
    char* data;
    u64 length;
    u64 capacity;
};

string new_string() {
    string s;
    s.data = malloc(16);
    s.length = 0;
    s.capacity = 16;
    s.data[0] = '\0'; // Initialize as an empty string
    return s;
}

void string_append(string* s, const char* str) {
    u64 str_length = strlen(str);

    if (s.length + str_length + 1 > s.capacity) {
        s.capacity = s.capacity * 2;

        printf("Resizing string from %llu to %llu bytes\n", s.capacity / 2, s.capacity);
        s.data = realloc(s.data, s.capacity);
    }

    printf("Appending '%s' to string of length %llu\n", str, s.length);
    memcpy(s.data + s.length, str, str_length);
}

private:

#include <stdio.h>
#include <stdlib.h>
#include <memory.h>